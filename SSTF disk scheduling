#include <iostream>
#include <cmath>
#include <climits>

using namespace std;

void SSTF(int requests[], int n, int head) {
    int totalSeekTime = 0;
    bool visited[100] = {false}; // Assuming max 100 requests

    cout << "SSTF Order: " << head;

    for (int i = 0; i < n; i++) {
        int closest = -1;
        int minDistance = INT_MAX;

        // Find the closest unvisited request
        for (int j = 0; j < n; j++) {
            if (!visited[j]) {
                int distance = abs(head - requests[j]);
                if (distance < minDistance) {
                    minDistance = distance;
                    closest = j;
                }
            }
        }

        visited[closest] = true;
        totalSeekTime += minDistance;
        head = requests[closest];
        cout << " -> " << head;
    }

    cout << "\nTotal Seek Time: " << totalSeekTime << endl;
}

int main() {
    int n, head;
    int requests[100]; // Assuming max 100 requests

    cout << "Enter the number of requests: ";
    cin >> n;
    
    cout << "Enter the requests: ";
    for (int i = 0; i < n; i++) {
        cin >> requests[i];
    }

    cout << "Enter the initial head position: ";
    cin >> head;

    SSTF(requests, n, head);

    return 0;
}
